@model Surya.India.Model.ViewModels.Sch_FeeReceiveLineViewModel
@using Surya.India.Core.Common

<style type="text/css">
    .ui-autocomplete {
        max-height: 250px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }
</style>

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Fee Receive </span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_CreatePost", "FeeReceiveLine", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.FeeReceiveHeaderId)
            @Html.HiddenFor(model => model.FeeReceiveLineId)

            <div class="form-horizontal modal-body">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <br />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FeeDueLineId, "Fee", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.FeeDueLineId, new { @class = "form-control col-xs-7", @readonly = true })
                                @Html.ValidationMessageFor(model => model.FeeDueLineId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Amount, "Amount", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control col-xs-7", @readonly = true })
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.Remark, new { @class = "form-control col-xs-7 " })
                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <br />


                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom left" name="Command:Edit" type="submit"><h2 style="margin:0px" id="submit"><span class="glyphicon glyphicon-floppy-disk black"></span> </h2></button>
                    <button class="btn custom" name="Command:Delete" id="delete" type="submit"><h2 style="margin:0px"><span class="glyphicon glyphicon-trash black"></span> </h2></button>
                </div>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        CustomSelectFunction($("#FeeDueLineId"), '/ComboHelpList/GetFeeDue', '/ComboHelpList/SetSingleFeeDue', ' ', false, 0);
    });
</script>



<script type="text/javascript">


    $('.datepicker').datepicker({
        format: 'dd/MM/yyyy',
        "setDate": new Date(),
        "autoclose": true

    })



    var IsSaved=false;
    var ValidationCount=0;


    //$('#modform').bind('submit',function(event){
    //    if(!IsSaved)
    //    {

    //        if(!ValidateData())
    //        {

    //            return false;
    //        }
    //        IsSaved=true;
    //        $('button:submit').attr('disabled','disabled');
    //        return IsSaved;
    //    }
    //    else
    //    {
    //        return false;
    //    }
    //});


    var id=@Model.FeeReceiveLineId;
    $('#delete','.modal-content').click(function (e) {
        if(id>0)
        {
            var url = '/FeeReceiveLine/DeletePost';
            $('form#modform').attr('action',url);
            return;
        }
        else
        {

            return false;
        }
    });



</script>







